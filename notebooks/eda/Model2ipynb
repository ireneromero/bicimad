{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 5,
   "metadata": {},
   "outputs": [],
   "source": [
    "import pandas as pd\n",
    "import seaborn as sns\n",
    "import matplotlib.pyplot as plt\n",
    "from sklearn import preprocessing,metrics,linear_model\n",
    "from sklearn.model_selection import cross_val_score,cross_val_predict,train_test_split"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "metadata": {},
   "outputs": [],
   "source": [
    "PATH_DATASET_DAILY = '../../data/prepared/bicimad_daily.csv'\n",
    "dataset_daily = pd.read_csv(PATH_DATASET_DAILY)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>day_of_week</th>\n",
       "      <th>rides</th>\n",
       "      <th>tmed</th>\n",
       "      <th>prec</th>\n",
       "      <th>velmedia</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>Sat</td>\n",
       "      <td>9762</td>\n",
       "      <td>27.3</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>Sun</td>\n",
       "      <td>9882</td>\n",
       "      <td>27.5</td>\n",
       "      <td>1.2</td>\n",
       "      <td>1.7</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "  day_of_week  rides  tmed  prec  velmedia\n",
       "0         Sat   9762  27.3   0.0       1.1\n",
       "1         Sun   9882  27.5   1.2       1.7"
      ]
     },
     "execution_count": 7,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "dataset_daily.head(2)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 13,
   "metadata": {},
   "outputs": [],
   "source": [
    "weekday_dict = {\n",
    "    'Mon': 0,\n",
    "    'Tue': 0,\n",
    "    'Wed': 0,\n",
    "    'Thu': 0,\n",
    "    'Fri': 0,\n",
    "    'Sat': 1,\n",
    "    'Sun': 1\n",
    "}"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 14,
   "metadata": {},
   "outputs": [],
   "source": [
    "dataset_daily['weekday'] = dataset_daily['day_of_week'].map(weekday_dict)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 27,
   "metadata": {},
   "outputs": [],
   "source": [
    "from sklearn.model_selection import train_test_split\n",
    "\n",
    "target = 'rides'\n",
    "categorical = ['day_of_week', 'weekday']\n",
    "dataset_daily_2 = pd.get_dummies(dataset_daily, columns=categorical)\n",
    "dataset_daily_3 = dataset_daily_2[['rides', 'tmed', 'prec', 'velmedia', 'weekday_0', 'weekday_1']]\n",
    "train, test = train_test_split(dataset_daily_3, test_size=0.3)\n",
    "features = ['velmedia', 'tmed', 'prec', 'weekday_0', 'weekday_1']"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 29,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>velmedia</th>\n",
       "      <th>tmed</th>\n",
       "      <th>prec</th>\n",
       "      <th>weekday_0</th>\n",
       "      <th>weekday_1</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>10</th>\n",
       "      <td>1.9</td>\n",
       "      <td>23.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>9</th>\n",
       "      <td>1.9</td>\n",
       "      <td>22.8</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>22</th>\n",
       "      <td>1.4</td>\n",
       "      <td>27.2</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>16</th>\n",
       "      <td>1.9</td>\n",
       "      <td>24.7</td>\n",
       "      <td>1.2</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>26</th>\n",
       "      <td>0.3</td>\n",
       "      <td>21.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "    velmedia  tmed  prec  weekday_0  weekday_1\n",
       "10       1.9  23.0   0.0          1          0\n",
       "9        1.9  22.8   0.0          1          0\n",
       "22       1.4  27.2   0.0          0          1\n",
       "16       1.9  24.7   1.2          1          0\n",
       "26       0.3  21.0   0.0          1          0"
      ]
     },
     "execution_count": 29,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "train[features].head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 26,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "LinearRegression()"
      ]
     },
     "execution_count": 26,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "lr = linear_model.LinearRegression()\n",
    "lr"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 30,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "LinearRegression()"
      ]
     },
     "execution_count": 30,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "lr.fit(train[features], train[target])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 31,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "0.2884342852577437"
      ]
     },
     "execution_count": 31,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "lr.score(train[features], train[target])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 34,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Root mean square error : 2023.7403243544632\n",
      "Mean absolute error : 1781.3893927938673\n"
     ]
    }
   ],
   "source": [
    "import math\n",
    "\n",
    "predictions = lr.predict(test[features])\n",
    "rmse=math.sqrt(metrics.mean_squared_error(test[target],predictions))\n",
    "mae=metrics.mean_absolute_error(test[target],predictions)\n",
    "print('Root mean square error :',rmse)\n",
    "print('Mean absolute error :',mae)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 35,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 1080x576 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "#Residual plot\n",
    "fig, ax = plt.subplots(figsize=(15,8))\n",
    "ax.scatter(test[target], test[target]-predictions)\n",
    "ax.axhline(lw=2,color='black')\n",
    "ax.set_xlabel('Observed')\n",
    "ax.set_ylabel('Residuals')\n",
    "ax.title.set_text(\"Residual Plot\")\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "lr.predict(test[features])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 18,
   "metadata": {},
   "outputs": [],
   "source": [
    "categorical = ['day_of_week', 'weekday']"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 36,
   "metadata": {},
   "outputs": [],
   "source": [
    "from sklearn.tree import DecisionTreeRegressor\n",
    "dtr=DecisionTreeRegressor(min_samples_split=2,max_leaf_nodes=10)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 37,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "DecisionTreeRegressor(max_leaf_nodes=10)"
      ]
     },
     "execution_count": 37,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "dtr.fit(train[features], train[target])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 38,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "0.9937800528279194"
      ]
     },
     "execution_count": 38,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "dtr.score(train[features], train[target])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 45,
   "metadata": {},
   "outputs": [
    {
     "ename": "ModuleNotFoundError",
     "evalue": "No module named 'graphviz'",
     "output_type": "error",
     "traceback": [
      "\u001b[0;31m---------------------------------------------------------------------------\u001b[0m",
      "\u001b[0;31mModuleNotFoundError\u001b[0m                       Traceback (most recent call last)",
      "\u001b[0;32m<ipython-input-45-29ece56f091a>\u001b[0m in \u001b[0;36m<module>\u001b[0;34m\u001b[0m\n\u001b[1;32m      2\u001b[0m \u001b[0;32mfrom\u001b[0m \u001b[0msklearn\u001b[0m \u001b[0;32mimport\u001b[0m \u001b[0mtree\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      3\u001b[0m \u001b[0;32mimport\u001b[0m \u001b[0mpydot\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m----> 4\u001b[0;31m \u001b[0;32mimport\u001b[0m \u001b[0mgraphviz\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m      5\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      6\u001b[0m \u001b[0;31m# export the learned model to tree\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
      "\u001b[0;31mModuleNotFoundError\u001b[0m: No module named 'graphviz'"
     ]
    }
   ],
   "source": [
    "#Plot the learned model\n",
    "from sklearn import tree\n",
    "import pydot\n",
    "import graphviz\n",
    "\n",
    "# export the learned model to tree\n",
    "dot_data = tree.export_graphviz(dtr, out_file=None) \n",
    "graph = graphviz.Source(dot_data) \n",
    "graph"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 40,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Root mean square error : 1112.5036641637535\n",
      "Mean absolute error : 785.6111111111111\n"
     ]
    }
   ],
   "source": [
    "predictions = dtr.predict(test[features])\n",
    "rmse=math.sqrt(metrics.mean_squared_error(test[target],predictions))\n",
    "mae=metrics.mean_absolute_error(test[target],predictions)\n",
    "print('Root mean square error :',rmse)\n",
    "print('Mean absolute error :',mae)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 43,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "RandomForestRegressor(n_estimators=200)"
      ]
     },
     "execution_count": 43,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "from sklearn.ensemble import RandomForestRegressor\n",
    "rf=RandomForestRegressor(n_estimators=200)\n",
    "rf.fit(train[features], train[target])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 44,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "0.8324618693599496"
      ]
     },
     "execution_count": 44,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "rf.score(train[features], train[target])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 98,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>day_of_week</th>\n",
       "      <th>rides</th>\n",
       "      <th>mean_for_weekday</th>\n",
       "      <th>tmed</th>\n",
       "      <th>prec</th>\n",
       "      <th>velmedia</th>\n",
       "      <th>tmax</th>\n",
       "      <th>tmin</th>\n",
       "      <th>weekend</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>Sat</td>\n",
       "      <td>8232</td>\n",
       "      <td>9161.00</td>\n",
       "      <td>27.3</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.1</td>\n",
       "      <td>33,6</td>\n",
       "      <td>21,0</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>Sun</td>\n",
       "      <td>8164</td>\n",
       "      <td>9269.25</td>\n",
       "      <td>27.5</td>\n",
       "      <td>1.2</td>\n",
       "      <td>1.7</td>\n",
       "      <td>34,8</td>\n",
       "      <td>20,2</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>Mon</td>\n",
       "      <td>12472</td>\n",
       "      <td>13218.50</td>\n",
       "      <td>26.8</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.7</td>\n",
       "      <td>31,3</td>\n",
       "      <td>22,3</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>Tue</td>\n",
       "      <td>13738</td>\n",
       "      <td>14296.50</td>\n",
       "      <td>24.4</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.4</td>\n",
       "      <td>29,5</td>\n",
       "      <td>19,4</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>Wed</td>\n",
       "      <td>13959</td>\n",
       "      <td>14556.00</td>\n",
       "      <td>23.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>2.8</td>\n",
       "      <td>27,8</td>\n",
       "      <td>18,3</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>Thu</td>\n",
       "      <td>14197</td>\n",
       "      <td>14939.75</td>\n",
       "      <td>22.6</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.6</td>\n",
       "      <td>27,4</td>\n",
       "      <td>17,8</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6</th>\n",
       "      <td>Fri</td>\n",
       "      <td>12456</td>\n",
       "      <td>10908.25</td>\n",
       "      <td>22.2</td>\n",
       "      <td>5.1</td>\n",
       "      <td>2.2</td>\n",
       "      <td>28,5</td>\n",
       "      <td>16,0</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7</th>\n",
       "      <td>Sat</td>\n",
       "      <td>7680</td>\n",
       "      <td>9161.00</td>\n",
       "      <td>20.2</td>\n",
       "      <td>1.8</td>\n",
       "      <td>1.7</td>\n",
       "      <td>23,6</td>\n",
       "      <td>16,9</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8</th>\n",
       "      <td>Sun</td>\n",
       "      <td>9035</td>\n",
       "      <td>9269.25</td>\n",
       "      <td>21.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.8</td>\n",
       "      <td>26,3</td>\n",
       "      <td>15,8</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>9</th>\n",
       "      <td>Mon</td>\n",
       "      <td>13466</td>\n",
       "      <td>13218.50</td>\n",
       "      <td>22.8</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.9</td>\n",
       "      <td>28,3</td>\n",
       "      <td>17,3</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>10</th>\n",
       "      <td>Tue</td>\n",
       "      <td>14531</td>\n",
       "      <td>14296.50</td>\n",
       "      <td>23.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.9</td>\n",
       "      <td>28,5</td>\n",
       "      <td>17,6</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>11</th>\n",
       "      <td>Wed</td>\n",
       "      <td>14981</td>\n",
       "      <td>14556.00</td>\n",
       "      <td>23.2</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.6</td>\n",
       "      <td>29,0</td>\n",
       "      <td>17,3</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>12</th>\n",
       "      <td>Thu</td>\n",
       "      <td>15196</td>\n",
       "      <td>14939.75</td>\n",
       "      <td>25.4</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.8</td>\n",
       "      <td>32,2</td>\n",
       "      <td>18,6</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>13</th>\n",
       "      <td>Fri</td>\n",
       "      <td>14583</td>\n",
       "      <td>10908.25</td>\n",
       "      <td>25.5</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.4</td>\n",
       "      <td>31,6</td>\n",
       "      <td>19,4</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>14</th>\n",
       "      <td>Sat</td>\n",
       "      <td>10212</td>\n",
       "      <td>9161.00</td>\n",
       "      <td>25.1</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.8</td>\n",
       "      <td>30,0</td>\n",
       "      <td>20,2</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>15</th>\n",
       "      <td>Sun</td>\n",
       "      <td>9798</td>\n",
       "      <td>9269.25</td>\n",
       "      <td>24.1</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.6</td>\n",
       "      <td>30,2</td>\n",
       "      <td>18,0</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>16</th>\n",
       "      <td>Mon</td>\n",
       "      <td>13347</td>\n",
       "      <td>13218.50</td>\n",
       "      <td>24.7</td>\n",
       "      <td>1.2</td>\n",
       "      <td>1.9</td>\n",
       "      <td>30,8</td>\n",
       "      <td>18,6</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>17</th>\n",
       "      <td>Tue</td>\n",
       "      <td>14258</td>\n",
       "      <td>14296.50</td>\n",
       "      <td>23.4</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.4</td>\n",
       "      <td>28,5</td>\n",
       "      <td>18,2</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>18</th>\n",
       "      <td>Wed</td>\n",
       "      <td>15173</td>\n",
       "      <td>14556.00</td>\n",
       "      <td>24.2</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.8</td>\n",
       "      <td>30,4</td>\n",
       "      <td>18,0</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>19</th>\n",
       "      <td>Thu</td>\n",
       "      <td>15429</td>\n",
       "      <td>14939.75</td>\n",
       "      <td>25.7</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.1</td>\n",
       "      <td>31,5</td>\n",
       "      <td>19,9</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>20</th>\n",
       "      <td>Fri</td>\n",
       "      <td>14540</td>\n",
       "      <td>10908.25</td>\n",
       "      <td>25.1</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.4</td>\n",
       "      <td>31,3</td>\n",
       "      <td>18,9</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>21</th>\n",
       "      <td>Sat</td>\n",
       "      <td>10520</td>\n",
       "      <td>9161.00</td>\n",
       "      <td>26.2</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.7</td>\n",
       "      <td>32,5</td>\n",
       "      <td>20,0</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>22</th>\n",
       "      <td>Sun</td>\n",
       "      <td>10080</td>\n",
       "      <td>9269.25</td>\n",
       "      <td>27.2</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.4</td>\n",
       "      <td>33,5</td>\n",
       "      <td>20,8</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>23</th>\n",
       "      <td>Mon</td>\n",
       "      <td>13589</td>\n",
       "      <td>13218.50</td>\n",
       "      <td>26.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.9</td>\n",
       "      <td>32,0</td>\n",
       "      <td>20,0</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>24</th>\n",
       "      <td>Tue</td>\n",
       "      <td>14659</td>\n",
       "      <td>14296.50</td>\n",
       "      <td>23.2</td>\n",
       "      <td>0.0</td>\n",
       "      <td>2.2</td>\n",
       "      <td>29,3</td>\n",
       "      <td>17,2</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>25</th>\n",
       "      <td>Wed</td>\n",
       "      <td>14111</td>\n",
       "      <td>14556.00</td>\n",
       "      <td>22.5</td>\n",
       "      <td>0.5</td>\n",
       "      <td>2.2</td>\n",
       "      <td>26,0</td>\n",
       "      <td>19,0</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>26</th>\n",
       "      <td>Thu</td>\n",
       "      <td>14937</td>\n",
       "      <td>14939.75</td>\n",
       "      <td>21.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.3</td>\n",
       "      <td>26,4</td>\n",
       "      <td>15,7</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>27</th>\n",
       "      <td>Fri</td>\n",
       "      <td>2054</td>\n",
       "      <td>10908.25</td>\n",
       "      <td>21.9</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.4</td>\n",
       "      <td>27,8</td>\n",
       "      <td>16,0</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "   day_of_week  rides  mean_for_weekday  tmed  prec  velmedia  tmax  tmin  \\\n",
       "0          Sat   8232           9161.00  27.3   0.0       1.1  33,6  21,0   \n",
       "1          Sun   8164           9269.25  27.5   1.2       1.7  34,8  20,2   \n",
       "2          Mon  12472          13218.50  26.8   0.0       1.7  31,3  22,3   \n",
       "3          Tue  13738          14296.50  24.4   0.0       1.4  29,5  19,4   \n",
       "4          Wed  13959          14556.00  23.0   0.0       2.8  27,8  18,3   \n",
       "5          Thu  14197          14939.75  22.6   0.0       0.6  27,4  17,8   \n",
       "6          Fri  12456          10908.25  22.2   5.1       2.2  28,5  16,0   \n",
       "7          Sat   7680           9161.00  20.2   1.8       1.7  23,6  16,9   \n",
       "8          Sun   9035           9269.25  21.0   0.0       0.8  26,3  15,8   \n",
       "9          Mon  13466          13218.50  22.8   0.0       1.9  28,3  17,3   \n",
       "10         Tue  14531          14296.50  23.0   0.0       1.9  28,5  17,6   \n",
       "11         Wed  14981          14556.00  23.2   0.0       0.6  29,0  17,3   \n",
       "12         Thu  15196          14939.75  25.4   0.0       0.8  32,2  18,6   \n",
       "13         Fri  14583          10908.25  25.5   0.0       1.4  31,6  19,4   \n",
       "14         Sat  10212           9161.00  25.1   0.0       0.8  30,0  20,2   \n",
       "15         Sun   9798           9269.25  24.1   0.0       0.6  30,2  18,0   \n",
       "16         Mon  13347          13218.50  24.7   1.2       1.9  30,8  18,6   \n",
       "17         Tue  14258          14296.50  23.4   0.0       1.4  28,5  18,2   \n",
       "18         Wed  15173          14556.00  24.2   0.0       0.8  30,4  18,0   \n",
       "19         Thu  15429          14939.75  25.7   0.0       1.1  31,5  19,9   \n",
       "20         Fri  14540          10908.25  25.1   0.0       1.4  31,3  18,9   \n",
       "21         Sat  10520           9161.00  26.2   0.0       1.7  32,5  20,0   \n",
       "22         Sun  10080           9269.25  27.2   0.0       1.4  33,5  20,8   \n",
       "23         Mon  13589          13218.50  26.0   0.0       1.9  32,0  20,0   \n",
       "24         Tue  14659          14296.50  23.2   0.0       2.2  29,3  17,2   \n",
       "25         Wed  14111          14556.00  22.5   0.5       2.2  26,0  19,0   \n",
       "26         Thu  14937          14939.75  21.0   0.0       0.3  26,4  15,7   \n",
       "27         Fri   2054          10908.25  21.9   0.0       1.4  27,8  16,0   \n",
       "\n",
       "    weekend  \n",
       "0         1  \n",
       "1         1  \n",
       "2         1  \n",
       "3         1  \n",
       "4         1  \n",
       "5         1  \n",
       "6         1  \n",
       "7         1  \n",
       "8         1  \n",
       "9         1  \n",
       "10        1  \n",
       "11        1  \n",
       "12        1  \n",
       "13        1  \n",
       "14        1  \n",
       "15        1  \n",
       "16        1  \n",
       "17        1  \n",
       "18        1  \n",
       "19        1  \n",
       "20        1  \n",
       "21        1  \n",
       "22        1  \n",
       "23        1  \n",
       "24        1  \n",
       "25        1  \n",
       "26        1  \n",
       "27        1  "
      ]
     },
     "execution_count": 98,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df_hourly"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 100,
   "metadata": {},
   "outputs": [],
   "source": [
    "df_hourly['weekend'] = df_hourly.apply(lambda row: 1 if row['day_of_week'] in ['Sat', 'Sun'] else 0, axis=1)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 101,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>day_of_week</th>\n",
       "      <th>rides</th>\n",
       "      <th>mean_for_weekday</th>\n",
       "      <th>tmed</th>\n",
       "      <th>prec</th>\n",
       "      <th>velmedia</th>\n",
       "      <th>tmax</th>\n",
       "      <th>tmin</th>\n",
       "      <th>weekend</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>Sat</td>\n",
       "      <td>8232</td>\n",
       "      <td>9161.00</td>\n",
       "      <td>27.3</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.1</td>\n",
       "      <td>33,6</td>\n",
       "      <td>21,0</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>Sun</td>\n",
       "      <td>8164</td>\n",
       "      <td>9269.25</td>\n",
       "      <td>27.5</td>\n",
       "      <td>1.2</td>\n",
       "      <td>1.7</td>\n",
       "      <td>34,8</td>\n",
       "      <td>20,2</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>Mon</td>\n",
       "      <td>12472</td>\n",
       "      <td>13218.50</td>\n",
       "      <td>26.8</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.7</td>\n",
       "      <td>31,3</td>\n",
       "      <td>22,3</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>Tue</td>\n",
       "      <td>13738</td>\n",
       "      <td>14296.50</td>\n",
       "      <td>24.4</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.4</td>\n",
       "      <td>29,5</td>\n",
       "      <td>19,4</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>Wed</td>\n",
       "      <td>13959</td>\n",
       "      <td>14556.00</td>\n",
       "      <td>23.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>2.8</td>\n",
       "      <td>27,8</td>\n",
       "      <td>18,3</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>Thu</td>\n",
       "      <td>14197</td>\n",
       "      <td>14939.75</td>\n",
       "      <td>22.6</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.6</td>\n",
       "      <td>27,4</td>\n",
       "      <td>17,8</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6</th>\n",
       "      <td>Fri</td>\n",
       "      <td>12456</td>\n",
       "      <td>10908.25</td>\n",
       "      <td>22.2</td>\n",
       "      <td>5.1</td>\n",
       "      <td>2.2</td>\n",
       "      <td>28,5</td>\n",
       "      <td>16,0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7</th>\n",
       "      <td>Sat</td>\n",
       "      <td>7680</td>\n",
       "      <td>9161.00</td>\n",
       "      <td>20.2</td>\n",
       "      <td>1.8</td>\n",
       "      <td>1.7</td>\n",
       "      <td>23,6</td>\n",
       "      <td>16,9</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8</th>\n",
       "      <td>Sun</td>\n",
       "      <td>9035</td>\n",
       "      <td>9269.25</td>\n",
       "      <td>21.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.8</td>\n",
       "      <td>26,3</td>\n",
       "      <td>15,8</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>9</th>\n",
       "      <td>Mon</td>\n",
       "      <td>13466</td>\n",
       "      <td>13218.50</td>\n",
       "      <td>22.8</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.9</td>\n",
       "      <td>28,3</td>\n",
       "      <td>17,3</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>10</th>\n",
       "      <td>Tue</td>\n",
       "      <td>14531</td>\n",
       "      <td>14296.50</td>\n",
       "      <td>23.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.9</td>\n",
       "      <td>28,5</td>\n",
       "      <td>17,6</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>11</th>\n",
       "      <td>Wed</td>\n",
       "      <td>14981</td>\n",
       "      <td>14556.00</td>\n",
       "      <td>23.2</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.6</td>\n",
       "      <td>29,0</td>\n",
       "      <td>17,3</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>12</th>\n",
       "      <td>Thu</td>\n",
       "      <td>15196</td>\n",
       "      <td>14939.75</td>\n",
       "      <td>25.4</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.8</td>\n",
       "      <td>32,2</td>\n",
       "      <td>18,6</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>13</th>\n",
       "      <td>Fri</td>\n",
       "      <td>14583</td>\n",
       "      <td>10908.25</td>\n",
       "      <td>25.5</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.4</td>\n",
       "      <td>31,6</td>\n",
       "      <td>19,4</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>14</th>\n",
       "      <td>Sat</td>\n",
       "      <td>10212</td>\n",
       "      <td>9161.00</td>\n",
       "      <td>25.1</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.8</td>\n",
       "      <td>30,0</td>\n",
       "      <td>20,2</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>15</th>\n",
       "      <td>Sun</td>\n",
       "      <td>9798</td>\n",
       "      <td>9269.25</td>\n",
       "      <td>24.1</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.6</td>\n",
       "      <td>30,2</td>\n",
       "      <td>18,0</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>16</th>\n",
       "      <td>Mon</td>\n",
       "      <td>13347</td>\n",
       "      <td>13218.50</td>\n",
       "      <td>24.7</td>\n",
       "      <td>1.2</td>\n",
       "      <td>1.9</td>\n",
       "      <td>30,8</td>\n",
       "      <td>18,6</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>17</th>\n",
       "      <td>Tue</td>\n",
       "      <td>14258</td>\n",
       "      <td>14296.50</td>\n",
       "      <td>23.4</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.4</td>\n",
       "      <td>28,5</td>\n",
       "      <td>18,2</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>18</th>\n",
       "      <td>Wed</td>\n",
       "      <td>15173</td>\n",
       "      <td>14556.00</td>\n",
       "      <td>24.2</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.8</td>\n",
       "      <td>30,4</td>\n",
       "      <td>18,0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>19</th>\n",
       "      <td>Thu</td>\n",
       "      <td>15429</td>\n",
       "      <td>14939.75</td>\n",
       "      <td>25.7</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.1</td>\n",
       "      <td>31,5</td>\n",
       "      <td>19,9</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>20</th>\n",
       "      <td>Fri</td>\n",
       "      <td>14540</td>\n",
       "      <td>10908.25</td>\n",
       "      <td>25.1</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.4</td>\n",
       "      <td>31,3</td>\n",
       "      <td>18,9</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>21</th>\n",
       "      <td>Sat</td>\n",
       "      <td>10520</td>\n",
       "      <td>9161.00</td>\n",
       "      <td>26.2</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.7</td>\n",
       "      <td>32,5</td>\n",
       "      <td>20,0</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>22</th>\n",
       "      <td>Sun</td>\n",
       "      <td>10080</td>\n",
       "      <td>9269.25</td>\n",
       "      <td>27.2</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.4</td>\n",
       "      <td>33,5</td>\n",
       "      <td>20,8</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>23</th>\n",
       "      <td>Mon</td>\n",
       "      <td>13589</td>\n",
       "      <td>13218.50</td>\n",
       "      <td>26.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.9</td>\n",
       "      <td>32,0</td>\n",
       "      <td>20,0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>24</th>\n",
       "      <td>Tue</td>\n",
       "      <td>14659</td>\n",
       "      <td>14296.50</td>\n",
       "      <td>23.2</td>\n",
       "      <td>0.0</td>\n",
       "      <td>2.2</td>\n",
       "      <td>29,3</td>\n",
       "      <td>17,2</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>25</th>\n",
       "      <td>Wed</td>\n",
       "      <td>14111</td>\n",
       "      <td>14556.00</td>\n",
       "      <td>22.5</td>\n",
       "      <td>0.5</td>\n",
       "      <td>2.2</td>\n",
       "      <td>26,0</td>\n",
       "      <td>19,0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>26</th>\n",
       "      <td>Thu</td>\n",
       "      <td>14937</td>\n",
       "      <td>14939.75</td>\n",
       "      <td>21.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.3</td>\n",
       "      <td>26,4</td>\n",
       "      <td>15,7</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>27</th>\n",
       "      <td>Fri</td>\n",
       "      <td>2054</td>\n",
       "      <td>10908.25</td>\n",
       "      <td>21.9</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.4</td>\n",
       "      <td>27,8</td>\n",
       "      <td>16,0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "   day_of_week  rides  mean_for_weekday  tmed  prec  velmedia  tmax  tmin  \\\n",
       "0          Sat   8232           9161.00  27.3   0.0       1.1  33,6  21,0   \n",
       "1          Sun   8164           9269.25  27.5   1.2       1.7  34,8  20,2   \n",
       "2          Mon  12472          13218.50  26.8   0.0       1.7  31,3  22,3   \n",
       "3          Tue  13738          14296.50  24.4   0.0       1.4  29,5  19,4   \n",
       "4          Wed  13959          14556.00  23.0   0.0       2.8  27,8  18,3   \n",
       "5          Thu  14197          14939.75  22.6   0.0       0.6  27,4  17,8   \n",
       "6          Fri  12456          10908.25  22.2   5.1       2.2  28,5  16,0   \n",
       "7          Sat   7680           9161.00  20.2   1.8       1.7  23,6  16,9   \n",
       "8          Sun   9035           9269.25  21.0   0.0       0.8  26,3  15,8   \n",
       "9          Mon  13466          13218.50  22.8   0.0       1.9  28,3  17,3   \n",
       "10         Tue  14531          14296.50  23.0   0.0       1.9  28,5  17,6   \n",
       "11         Wed  14981          14556.00  23.2   0.0       0.6  29,0  17,3   \n",
       "12         Thu  15196          14939.75  25.4   0.0       0.8  32,2  18,6   \n",
       "13         Fri  14583          10908.25  25.5   0.0       1.4  31,6  19,4   \n",
       "14         Sat  10212           9161.00  25.1   0.0       0.8  30,0  20,2   \n",
       "15         Sun   9798           9269.25  24.1   0.0       0.6  30,2  18,0   \n",
       "16         Mon  13347          13218.50  24.7   1.2       1.9  30,8  18,6   \n",
       "17         Tue  14258          14296.50  23.4   0.0       1.4  28,5  18,2   \n",
       "18         Wed  15173          14556.00  24.2   0.0       0.8  30,4  18,0   \n",
       "19         Thu  15429          14939.75  25.7   0.0       1.1  31,5  19,9   \n",
       "20         Fri  14540          10908.25  25.1   0.0       1.4  31,3  18,9   \n",
       "21         Sat  10520           9161.00  26.2   0.0       1.7  32,5  20,0   \n",
       "22         Sun  10080           9269.25  27.2   0.0       1.4  33,5  20,8   \n",
       "23         Mon  13589          13218.50  26.0   0.0       1.9  32,0  20,0   \n",
       "24         Tue  14659          14296.50  23.2   0.0       2.2  29,3  17,2   \n",
       "25         Wed  14111          14556.00  22.5   0.5       2.2  26,0  19,0   \n",
       "26         Thu  14937          14939.75  21.0   0.0       0.3  26,4  15,7   \n",
       "27         Fri   2054          10908.25  21.9   0.0       1.4  27,8  16,0   \n",
       "\n",
       "    weekend  \n",
       "0         1  \n",
       "1         1  \n",
       "2         0  \n",
       "3         0  \n",
       "4         0  \n",
       "5         0  \n",
       "6         0  \n",
       "7         1  \n",
       "8         1  \n",
       "9         0  \n",
       "10        0  \n",
       "11        0  \n",
       "12        0  \n",
       "13        0  \n",
       "14        1  \n",
       "15        1  \n",
       "16        0  \n",
       "17        0  \n",
       "18        0  \n",
       "19        0  \n",
       "20        0  \n",
       "21        1  \n",
       "22        1  \n",
       "23        0  \n",
       "24        0  \n",
       "25        0  \n",
       "26        0  \n",
       "27        0  "
      ]
     },
     "execution_count": 101,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df_hourly"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 110,
   "metadata": {},
   "outputs": [],
   "source": [
    "df_daily = pd.read_csv('/home/irene/dev/keepler-prueba/keepler-bicimad/data/prepared/bicimad_daily.csv')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 111,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>day_of_week</th>\n",
       "      <th>rides</th>\n",
       "      <th>weekend</th>\n",
       "      <th>mean_for_weekday</th>\n",
       "      <th>tmed</th>\n",
       "      <th>prec</th>\n",
       "      <th>velmedia</th>\n",
       "      <th>tmax</th>\n",
       "      <th>tmin</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>Sat</td>\n",
       "      <td>8232</td>\n",
       "      <td>weekend</td>\n",
       "      <td>9161.00</td>\n",
       "      <td>27.3</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.1</td>\n",
       "      <td>33,6</td>\n",
       "      <td>21,0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>Sun</td>\n",
       "      <td>8164</td>\n",
       "      <td>weekend</td>\n",
       "      <td>9269.25</td>\n",
       "      <td>27.5</td>\n",
       "      <td>1.2</td>\n",
       "      <td>1.7</td>\n",
       "      <td>34,8</td>\n",
       "      <td>20,2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>Mon</td>\n",
       "      <td>12472</td>\n",
       "      <td>weekday</td>\n",
       "      <td>13218.50</td>\n",
       "      <td>26.8</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.7</td>\n",
       "      <td>31,3</td>\n",
       "      <td>22,3</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>Tue</td>\n",
       "      <td>13738</td>\n",
       "      <td>weekday</td>\n",
       "      <td>14296.50</td>\n",
       "      <td>24.4</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.4</td>\n",
       "      <td>29,5</td>\n",
       "      <td>19,4</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>Wed</td>\n",
       "      <td>13959</td>\n",
       "      <td>weekday</td>\n",
       "      <td>14556.00</td>\n",
       "      <td>23.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>2.8</td>\n",
       "      <td>27,8</td>\n",
       "      <td>18,3</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "  day_of_week  rides  weekend  mean_for_weekday  tmed  prec  velmedia  tmax  \\\n",
       "0         Sat   8232  weekend           9161.00  27.3   0.0       1.1  33,6   \n",
       "1         Sun   8164  weekend           9269.25  27.5   1.2       1.7  34,8   \n",
       "2         Mon  12472  weekday          13218.50  26.8   0.0       1.7  31,3   \n",
       "3         Tue  13738  weekday          14296.50  24.4   0.0       1.4  29,5   \n",
       "4         Wed  13959  weekday          14556.00  23.0   0.0       2.8  27,8   \n",
       "\n",
       "   tmin  \n",
       "0  21,0  \n",
       "1  20,2  \n",
       "2  22,3  \n",
       "3  19,4  \n",
       "4  18,3  "
      ]
     },
     "execution_count": 111,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df_daily.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 113,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>day_of_week</th>\n",
       "      <th>hour</th>\n",
       "      <th>rides</th>\n",
       "      <th>weekend</th>\n",
       "      <th>mean_for_weekday_and_hour</th>\n",
       "      <th>tmax</th>\n",
       "      <th>tmin</th>\n",
       "      <th>rain</th>\n",
       "      <th>wind</th>\n",
       "      <th>temp</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>Sat</td>\n",
       "      <td>1</td>\n",
       "      <td>456</td>\n",
       "      <td>weekend</td>\n",
       "      <td>470.00</td>\n",
       "      <td>33,6</td>\n",
       "      <td>21,0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.1</td>\n",
       "      <td>21,0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>Sat</td>\n",
       "      <td>2</td>\n",
       "      <td>342</td>\n",
       "      <td>weekend</td>\n",
       "      <td>396.50</td>\n",
       "      <td>33,6</td>\n",
       "      <td>21,0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.1</td>\n",
       "      <td>21,0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>Sat</td>\n",
       "      <td>3</td>\n",
       "      <td>275</td>\n",
       "      <td>weekend</td>\n",
       "      <td>293.25</td>\n",
       "      <td>33,6</td>\n",
       "      <td>21,0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.1</td>\n",
       "      <td>21,0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>Sat</td>\n",
       "      <td>4</td>\n",
       "      <td>183</td>\n",
       "      <td>weekend</td>\n",
       "      <td>190.25</td>\n",
       "      <td>33,6</td>\n",
       "      <td>21,0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.1</td>\n",
       "      <td>21,0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>Sat</td>\n",
       "      <td>5</td>\n",
       "      <td>137</td>\n",
       "      <td>weekend</td>\n",
       "      <td>151.75</td>\n",
       "      <td>33,6</td>\n",
       "      <td>21,0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.1</td>\n",
       "      <td>21,0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "  day_of_week  hour  rides  weekend  mean_for_weekday_and_hour  tmax  tmin  \\\n",
       "0         Sat     1    456  weekend                     470.00  33,6  21,0   \n",
       "1         Sat     2    342  weekend                     396.50  33,6  21,0   \n",
       "2         Sat     3    275  weekend                     293.25  33,6  21,0   \n",
       "3         Sat     4    183  weekend                     190.25  33,6  21,0   \n",
       "4         Sat     5    137  weekend                     151.75  33,6  21,0   \n",
       "\n",
       "   rain  wind  temp  \n",
       "0   0.0   1.1  21,0  \n",
       "1   0.0   1.1  21,0  \n",
       "2   0.0   1.1  21,0  \n",
       "3   0.0   1.1  21,0  \n",
       "4   0.0   1.1  21,0  "
      ]
     },
     "execution_count": 113,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df_hourly = pd.read_csv('/home/irene/dev/keepler-prueba/keepler-bicimad/data/prepared/bicimad_hourly.csv')\n",
    "df_hourly.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 67,
   "metadata": {},
   "outputs": [
    {
     "ename": "TypeError",
     "evalue": "'Series' objects are mutable, thus they cannot be hashed",
     "output_type": "error",
     "traceback": [
      "\u001b[0;31m---------------------------------------------------------------------------\u001b[0m",
      "\u001b[0;31mTypeError\u001b[0m                                 Traceback (most recent call last)",
      "\u001b[0;32m<ipython-input-67-f6ac0da1277a>\u001b[0m in \u001b[0;36m<module>\u001b[0;34m\u001b[0m\n\u001b[0;32m----> 1\u001b[0;31m \u001b[0mmean_for_weekday_and_hour\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mget\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mdf_hourly\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;34m'day_of_week'\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mdf_hourly\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;34m'hour'\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m",
      "\u001b[0;32m~/anaconda3/envs/keepler-bicimad-env/lib/python3.8/site-packages/pandas/core/generic.py\u001b[0m in \u001b[0;36m__hash__\u001b[0;34m(self)\u001b[0m\n\u001b[1;32m   1796\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1797\u001b[0m     \u001b[0;32mdef\u001b[0m \u001b[0m__hash__\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mself\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m-> 1798\u001b[0;31m         raise TypeError(\n\u001b[0m\u001b[1;32m   1799\u001b[0m             \u001b[0;34mf\"{repr(type(self).__name__)} objects are mutable, \"\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1800\u001b[0m             \u001b[0;34mf\"thus they cannot be hashed\"\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
      "\u001b[0;31mTypeError\u001b[0m: 'Series' objects are mutable, thus they cannot be hashed"
     ]
    }
   ],
   "source": [
    "mean_for_weekday_and_hour.get(df_hourly['day_of_week'], df_hourly['hour'])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 65,
   "metadata": {},
   "outputs": [
    {
     "ename": "AttributeError",
     "evalue": "'tuple' object has no attribute 'map'",
     "output_type": "error",
     "traceback": [
      "\u001b[0;31m---------------------------------------------------------------------------\u001b[0m",
      "\u001b[0;31mAttributeError\u001b[0m                            Traceback (most recent call last)",
      "\u001b[0;32m<ipython-input-65-367827e7c302>\u001b[0m in \u001b[0;36m<module>\u001b[0;34m\u001b[0m\n\u001b[0;32m----> 1\u001b[0;31m \u001b[0;34m(\u001b[0m\u001b[0mdf_hourly\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;34m'day_of_week'\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mdf_hourly\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;34m'hour'\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mmap\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mmean_for_weekday_and_hour\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m",
      "\u001b[0;31mAttributeError\u001b[0m: 'tuple' object has no attribute 'map'"
     ]
    }
   ],
   "source": [
    "(df_hourly['day_of_week'], df_hourly['hour']).map(mean_for_weekday_and_hour)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 78,
   "metadata": {},
   "outputs": [],
   "source": [
    "mean_for_weekday_and_hour = df_hourly.groupby(['day_of_week', 'hour'])['rides'].mean().to_dict()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 83,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "508.5"
      ]
     },
     "execution_count": 83,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "mean_for_weekday_and_hour.get(('Fri', 0))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 82,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "{('Fri', 0): 508.5,\n",
       " ('Fri', 1): 295.75,\n",
       " ('Fri', 2): 178.25,\n",
       " ('Fri', 3): 107.5,\n",
       " ('Fri', 4): 75.75,\n",
       " ('Fri', 5): 71.5,\n",
       " ('Fri', 6): 106.5,\n",
       " ('Fri', 7): 512.25,\n",
       " ('Fri', 8): 882.25,\n",
       " ('Fri', 9): 887.0,\n",
       " ('Fri', 10): 471.6666666666667,\n",
       " ('Fri', 11): 435.3333333333333,\n",
       " ('Fri', 12): 503.6666666666667,\n",
       " ('Fri', 13): 612.0,\n",
       " ('Fri', 14): 1095.6666666666667,\n",
       " ('Fri', 15): 1204.0,\n",
       " ('Fri', 16): 811.0,\n",
       " ('Fri', 17): 767.6666666666666,\n",
       " ('Fri', 18): 798.3333333333334,\n",
       " ('Fri', 19): 857.6666666666666,\n",
       " ('Fri', 20): 775.0,\n",
       " ('Fri', 21): 703.6666666666666,\n",
       " ('Fri', 22): 542.6666666666666,\n",
       " ('Fri', 23): 428.0,\n",
       " ('Mon', 0): 300.0,\n",
       " ('Mon', 1): 159.25,\n",
       " ('Mon', 2): 96.5,\n",
       " ('Mon', 3): 53.75,\n",
       " ('Mon', 4): 46.5,\n",
       " ('Mon', 5): 48.5,\n",
       " ('Mon', 6): 104.25,\n",
       " ('Mon', 7): 462.5,\n",
       " ('Mon', 8): 1129.0,\n",
       " ('Mon', 9): 861.5,\n",
       " ('Mon', 10): 422.5,\n",
       " ('Mon', 11): 389.25,\n",
       " ('Mon', 12): 421.5,\n",
       " ('Mon', 13): 569.25,\n",
       " ('Mon', 14): 918.0,\n",
       " ('Mon', 15): 920.75,\n",
       " ('Mon', 16): 737.75,\n",
       " ('Mon', 17): 819.75,\n",
       " ('Mon', 18): 1194.75,\n",
       " ('Mon', 19): 1167.5,\n",
       " ('Mon', 20): 937.75,\n",
       " ('Mon', 21): 693.0,\n",
       " ('Mon', 22): 448.0,\n",
       " ('Mon', 23): 317.0,\n",
       " ('Sat', 0): 515.0,\n",
       " ('Sat', 1): 470.0,\n",
       " ('Sat', 2): 396.5,\n",
       " ('Sat', 3): 293.25,\n",
       " ('Sat', 4): 190.25,\n",
       " ('Sat', 5): 151.75,\n",
       " ('Sat', 6): 121.0,\n",
       " ('Sat', 7): 80.75,\n",
       " ('Sat', 8): 132.5,\n",
       " ('Sat', 9): 232.5,\n",
       " ('Sat', 10): 303.25,\n",
       " ('Sat', 11): 393.5,\n",
       " ('Sat', 12): 404.25,\n",
       " ('Sat', 13): 456.25,\n",
       " ('Sat', 14): 495.5,\n",
       " ('Sat', 15): 391.75,\n",
       " ('Sat', 16): 470.0,\n",
       " ('Sat', 17): 503.0,\n",
       " ('Sat', 18): 513.5,\n",
       " ('Sat', 19): 655.0,\n",
       " ('Sat', 20): 699.75,\n",
       " ('Sat', 21): 564.75,\n",
       " ('Sat', 22): 449.0,\n",
       " ('Sat', 23): 406.75,\n",
       " ('Sun', 0): 472.25,\n",
       " ('Sun', 1): 441.25,\n",
       " ('Sun', 2): 383.5,\n",
       " ('Sun', 3): 271.25,\n",
       " ('Sun', 4): 189.75,\n",
       " ('Sun', 5): 149.0,\n",
       " ('Sun', 6): 121.5,\n",
       " ('Sun', 7): 76.75,\n",
       " ('Sun', 8): 112.5,\n",
       " ('Sun', 9): 151.25,\n",
       " ('Sun', 10): 271.25,\n",
       " ('Sun', 11): 382.25,\n",
       " ('Sun', 12): 474.25,\n",
       " ('Sun', 13): 532.25,\n",
       " ('Sun', 14): 533.5,\n",
       " ('Sun', 15): 393.75,\n",
       " ('Sun', 16): 487.5,\n",
       " ('Sun', 17): 568.75,\n",
       " ('Sun', 18): 603.0,\n",
       " ('Sun', 19): 648.25,\n",
       " ('Sun', 20): 652.5,\n",
       " ('Sun', 21): 565.0,\n",
       " ('Sun', 22): 428.25,\n",
       " ('Sun', 23): 359.75,\n",
       " ('Thu', 0): 428.0,\n",
       " ('Thu', 1): 219.25,\n",
       " ('Thu', 2): 127.25,\n",
       " ('Thu', 3): 75.75,\n",
       " ('Thu', 4): 46.5,\n",
       " ('Thu', 5): 47.75,\n",
       " ('Thu', 6): 104.75,\n",
       " ('Thu', 7): 506.75,\n",
       " ('Thu', 8): 1215.5,\n",
       " ('Thu', 9): 966.75,\n",
       " ('Thu', 10): 500.0,\n",
       " ('Thu', 11): 450.0,\n",
       " ('Thu', 12): 497.25,\n",
       " ('Thu', 13): 623.25,\n",
       " ('Thu', 14): 972.75,\n",
       " ('Thu', 15): 952.25,\n",
       " ('Thu', 16): 817.75,\n",
       " ('Thu', 17): 870.5,\n",
       " ('Thu', 18): 1257.0,\n",
       " ('Thu', 19): 1287.0,\n",
       " ('Thu', 20): 1109.25,\n",
       " ('Thu', 21): 792.75,\n",
       " ('Thu', 22): 545.75,\n",
       " ('Thu', 23): 526.0,\n",
       " ('Tue', 0): 282.5,\n",
       " ('Tue', 1): 171.5,\n",
       " ('Tue', 2): 89.0,\n",
       " ('Tue', 3): 56.75,\n",
       " ('Tue', 4): 36.5,\n",
       " ('Tue', 5): 40.25,\n",
       " ('Tue', 6): 112.25,\n",
       " ('Tue', 7): 521.0,\n",
       " ('Tue', 8): 1217.25,\n",
       " ('Tue', 9): 964.75,\n",
       " ('Tue', 10): 479.25,\n",
       " ('Tue', 11): 449.0,\n",
       " ('Tue', 12): 456.25,\n",
       " ('Tue', 13): 643.25,\n",
       " ('Tue', 14): 945.75,\n",
       " ('Tue', 15): 953.0,\n",
       " ('Tue', 16): 781.75,\n",
       " ('Tue', 17): 860.0,\n",
       " ('Tue', 18): 1234.75,\n",
       " ('Tue', 19): 1232.75,\n",
       " ('Tue', 20): 1037.75,\n",
       " ('Tue', 21): 758.5,\n",
       " ('Tue', 22): 507.25,\n",
       " ('Tue', 23): 465.5,\n",
       " ('Wed', 0): 362.75,\n",
       " ('Wed', 1): 197.5,\n",
       " ('Wed', 2): 119.0,\n",
       " ('Wed', 3): 64.75,\n",
       " ('Wed', 4): 39.75,\n",
       " ('Wed', 5): 48.5,\n",
       " ('Wed', 6): 104.0,\n",
       " ('Wed', 7): 518.5,\n",
       " ('Wed', 8): 1216.75,\n",
       " ('Wed', 9): 989.0,\n",
       " ('Wed', 10): 495.75,\n",
       " ('Wed', 11): 433.5,\n",
       " ('Wed', 12): 474.25,\n",
       " ('Wed', 13): 617.5,\n",
       " ('Wed', 14): 946.5,\n",
       " ('Wed', 15): 971.0,\n",
       " ('Wed', 16): 799.25,\n",
       " ('Wed', 17): 882.75,\n",
       " ('Wed', 18): 1260.0,\n",
       " ('Wed', 19): 1198.0,\n",
       " ('Wed', 20): 1045.25,\n",
       " ('Wed', 21): 798.25,\n",
       " ('Wed', 22): 493.25,\n",
       " ('Wed', 23): 480.25}"
      ]
     },
     "execution_count": 82,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "mean_for_weekday_and_hour"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 81,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "0"
      ]
     },
     "execution_count": 81,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "mean_for_weekday_and_hour.get('Fri', 0)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 70,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "508.5"
      ]
     },
     "execution_count": 70,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "mean_for_weekday_and_hour['Fri'][0]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 72,
   "metadata": {},
   "outputs": [],
   "source": [
    "df = df_hourly"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 77,
   "metadata": {},
   "outputs": [
    {
     "ename": "TypeError",
     "evalue": "Expected tuple, got str",
     "output_type": "error",
     "traceback": [
      "\u001b[0;31m---------------------------------------------------------------------------\u001b[0m",
      "\u001b[0;31mTypeError\u001b[0m                                 Traceback (most recent call last)",
      "\u001b[0;32m<ipython-input-77-eb8daa45804d>\u001b[0m in \u001b[0;36m<module>\u001b[0;34m\u001b[0m\n\u001b[0;32m----> 1\u001b[0;31m \u001b[0mdf\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;34m'mean_for_weekday_and_hour'\u001b[0m\u001b[0;34m]\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mmean_for_weekday_and_hour\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0mdf\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;34m'day_of_week'\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;36m0\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m",
      "\u001b[0;32m~/anaconda3/envs/keepler-bicimad-env/lib/python3.8/site-packages/pandas/core/series.py\u001b[0m in \u001b[0;36m__getitem__\u001b[0;34m(self, key)\u001b[0m\n\u001b[1;32m    908\u001b[0m             \u001b[0mkey\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mcheck_bool_indexer\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mindex\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mkey\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    909\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 910\u001b[0;31m         \u001b[0;32mreturn\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_get_with\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mkey\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    911\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    912\u001b[0m     \u001b[0;32mdef\u001b[0m \u001b[0m_get_with\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mself\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mkey\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
      "\u001b[0;32m~/anaconda3/envs/keepler-bicimad-env/lib/python3.8/site-packages/pandas/core/series.py\u001b[0m in \u001b[0;36m_get_with\u001b[0;34m(self, key)\u001b[0m\n\u001b[1;32m    958\u001b[0m             \u001b[0;32mreturn\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mloc\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0mkey\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    959\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 960\u001b[0;31m         \u001b[0;32mreturn\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mreindex\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mkey\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    961\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    962\u001b[0m     \u001b[0;32mdef\u001b[0m \u001b[0m_get_values_tuple\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mself\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mkey\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
      "\u001b[0;32m~/anaconda3/envs/keepler-bicimad-env/lib/python3.8/site-packages/pandas/core/series.py\u001b[0m in \u001b[0;36mreindex\u001b[0;34m(self, index, **kwargs)\u001b[0m\n\u001b[1;32m   4028\u001b[0m     \u001b[0;34m@\u001b[0m\u001b[0mAppender\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mgeneric\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mNDFrame\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mreindex\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m__doc__\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   4029\u001b[0m     \u001b[0;32mdef\u001b[0m \u001b[0mreindex\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mself\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mindex\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;32mNone\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m**\u001b[0m\u001b[0mkwargs\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m-> 4030\u001b[0;31m         \u001b[0;32mreturn\u001b[0m \u001b[0msuper\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mreindex\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mindex\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mindex\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m**\u001b[0m\u001b[0mkwargs\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m   4031\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   4032\u001b[0m     def drop(\n",
      "\u001b[0;32m~/anaconda3/envs/keepler-bicimad-env/lib/python3.8/site-packages/pandas/core/generic.py\u001b[0m in \u001b[0;36mreindex\u001b[0;34m(self, *args, **kwargs)\u001b[0m\n\u001b[1;32m   4541\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   4542\u001b[0m         \u001b[0;31m# perform the reindex on the axes\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m-> 4543\u001b[0;31m         return self._reindex_axes(\n\u001b[0m\u001b[1;32m   4544\u001b[0m             \u001b[0maxes\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mlevel\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mlimit\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mtolerance\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mmethod\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mfill_value\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mcopy\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   4545\u001b[0m         ).__finalize__(self)\n",
      "\u001b[0;32m~/anaconda3/envs/keepler-bicimad-env/lib/python3.8/site-packages/pandas/core/generic.py\u001b[0m in \u001b[0;36m_reindex_axes\u001b[0;34m(self, axes, level, limit, tolerance, method, fill_value, copy)\u001b[0m\n\u001b[1;32m   4556\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   4557\u001b[0m             \u001b[0max\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_get_axis\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0ma\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m-> 4558\u001b[0;31m             new_index, indexer = ax.reindex(\n\u001b[0m\u001b[1;32m   4559\u001b[0m                 \u001b[0mlabels\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mlevel\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mlevel\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mlimit\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mlimit\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mtolerance\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mtolerance\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mmethod\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mmethod\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   4560\u001b[0m             )\n",
      "\u001b[0;32m~/anaconda3/envs/keepler-bicimad-env/lib/python3.8/site-packages/pandas/core/indexes/multi.py\u001b[0m in \u001b[0;36mreindex\u001b[0;34m(self, target, method, level, limit, tolerance)\u001b[0m\n\u001b[1;32m   2423\u001b[0m             \u001b[0;32melse\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   2424\u001b[0m                 \u001b[0;31m# hopefully?\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m-> 2425\u001b[0;31m                 \u001b[0mtarget\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mMultiIndex\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mfrom_tuples\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mtarget\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m   2426\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   2427\u001b[0m         if (\n",
      "\u001b[0;32m~/anaconda3/envs/keepler-bicimad-env/lib/python3.8/site-packages/pandas/core/indexes/multi.py\u001b[0m in \u001b[0;36mfrom_tuples\u001b[0;34m(cls, tuples, sortorder, names)\u001b[0m\n\u001b[1;32m    487\u001b[0m                 \u001b[0mtuples\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mtuples\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_values\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    488\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 489\u001b[0;31m             \u001b[0marrays\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mlist\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mlib\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mtuples_to_object_array\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mtuples\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mT\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    490\u001b[0m         \u001b[0;32melif\u001b[0m \u001b[0misinstance\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mtuples\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mlist\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    491\u001b[0m             \u001b[0marrays\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mlist\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mlib\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mto_object_array_tuples\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mtuples\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mT\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
      "\u001b[0;32mpandas/_libs/lib.pyx\u001b[0m in \u001b[0;36mpandas._libs.lib.tuples_to_object_array\u001b[0;34m()\u001b[0m\n",
      "\u001b[0;31mTypeError\u001b[0m: Expected tuple, got str"
     ]
    }
   ],
   "source": [
    "df['mean_for_weekday_and_hour'] = mean_for_weekday_and_hour[df['day_of_week']][0]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 74,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>date</th>\n",
       "      <th>day_of_week</th>\n",
       "      <th>hour</th>\n",
       "      <th>rides</th>\n",
       "      <th>mean_for_weekday_and_hour</th>\n",
       "      <th>horatmin</th>\n",
       "      <th>tmax</th>\n",
       "      <th>tmin</th>\n",
       "      <th>rain</th>\n",
       "      <th>wind</th>\n",
       "      <th>temp</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>2018-09-01</td>\n",
       "      <td>Sat</td>\n",
       "      <td>1</td>\n",
       "      <td>456</td>\n",
       "      <td>NaN</td>\n",
       "      <td>6</td>\n",
       "      <td>33,6</td>\n",
       "      <td>21,0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.1</td>\n",
       "      <td>21,0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>2018-09-01</td>\n",
       "      <td>Sat</td>\n",
       "      <td>2</td>\n",
       "      <td>342</td>\n",
       "      <td>NaN</td>\n",
       "      <td>6</td>\n",
       "      <td>33,6</td>\n",
       "      <td>21,0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.1</td>\n",
       "      <td>21,0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>2018-09-01</td>\n",
       "      <td>Sat</td>\n",
       "      <td>3</td>\n",
       "      <td>275</td>\n",
       "      <td>NaN</td>\n",
       "      <td>6</td>\n",
       "      <td>33,6</td>\n",
       "      <td>21,0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.1</td>\n",
       "      <td>21,0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>2018-09-01</td>\n",
       "      <td>Sat</td>\n",
       "      <td>4</td>\n",
       "      <td>183</td>\n",
       "      <td>NaN</td>\n",
       "      <td>6</td>\n",
       "      <td>33,6</td>\n",
       "      <td>21,0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.1</td>\n",
       "      <td>21,0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>2018-09-01</td>\n",
       "      <td>Sat</td>\n",
       "      <td>5</td>\n",
       "      <td>137</td>\n",
       "      <td>NaN</td>\n",
       "      <td>6</td>\n",
       "      <td>33,6</td>\n",
       "      <td>21,0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.1</td>\n",
       "      <td>21,0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>651</th>\n",
       "      <td>2018-09-28</td>\n",
       "      <td>Fri</td>\n",
       "      <td>4</td>\n",
       "      <td>51</td>\n",
       "      <td>NaN</td>\n",
       "      <td>6</td>\n",
       "      <td>27,8</td>\n",
       "      <td>16,0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.4</td>\n",
       "      <td>16,0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>652</th>\n",
       "      <td>2018-09-28</td>\n",
       "      <td>Fri</td>\n",
       "      <td>5</td>\n",
       "      <td>70</td>\n",
       "      <td>NaN</td>\n",
       "      <td>6</td>\n",
       "      <td>27,8</td>\n",
       "      <td>16,0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.4</td>\n",
       "      <td>16,0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>653</th>\n",
       "      <td>2018-09-28</td>\n",
       "      <td>Fri</td>\n",
       "      <td>6</td>\n",
       "      <td>112</td>\n",
       "      <td>NaN</td>\n",
       "      <td>6</td>\n",
       "      <td>27,8</td>\n",
       "      <td>16,0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.4</td>\n",
       "      <td>16,0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>654</th>\n",
       "      <td>2018-09-28</td>\n",
       "      <td>Fri</td>\n",
       "      <td>7</td>\n",
       "      <td>533</td>\n",
       "      <td>NaN</td>\n",
       "      <td>6</td>\n",
       "      <td>27,8</td>\n",
       "      <td>16,0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.4</td>\n",
       "      <td>21.899999618530273</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>655</th>\n",
       "      <td>2018-09-28</td>\n",
       "      <td>Fri</td>\n",
       "      <td>8</td>\n",
       "      <td>200</td>\n",
       "      <td>NaN</td>\n",
       "      <td>6</td>\n",
       "      <td>27,8</td>\n",
       "      <td>16,0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.4</td>\n",
       "      <td>21.899999618530273</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>656 rows × 11 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "           date day_of_week  hour  rides  mean_for_weekday_and_hour  horatmin  \\\n",
       "0    2018-09-01         Sat     1    456                        NaN         6   \n",
       "1    2018-09-01         Sat     2    342                        NaN         6   \n",
       "2    2018-09-01         Sat     3    275                        NaN         6   \n",
       "3    2018-09-01         Sat     4    183                        NaN         6   \n",
       "4    2018-09-01         Sat     5    137                        NaN         6   \n",
       "..          ...         ...   ...    ...                        ...       ...   \n",
       "651  2018-09-28         Fri     4     51                        NaN         6   \n",
       "652  2018-09-28         Fri     5     70                        NaN         6   \n",
       "653  2018-09-28         Fri     6    112                        NaN         6   \n",
       "654  2018-09-28         Fri     7    533                        NaN         6   \n",
       "655  2018-09-28         Fri     8    200                        NaN         6   \n",
       "\n",
       "     tmax  tmin  rain  wind                temp  \n",
       "0    33,6  21,0   0.0   1.1                21,0  \n",
       "1    33,6  21,0   0.0   1.1                21,0  \n",
       "2    33,6  21,0   0.0   1.1                21,0  \n",
       "3    33,6  21,0   0.0   1.1                21,0  \n",
       "4    33,6  21,0   0.0   1.1                21,0  \n",
       "..    ...   ...   ...   ...                 ...  \n",
       "651  27,8  16,0   0.0   1.4                16,0  \n",
       "652  27,8  16,0   0.0   1.4                16,0  \n",
       "653  27,8  16,0   0.0   1.4                16,0  \n",
       "654  27,8  16,0   0.0   1.4  21.899999618530273  \n",
       "655  27,8  16,0   0.0   1.4  21.899999618530273  \n",
       "\n",
       "[656 rows x 11 columns]"
      ]
     },
     "execution_count": 74,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 62,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>date</th>\n",
       "      <th>day_of_week</th>\n",
       "      <th>hour</th>\n",
       "      <th>rides</th>\n",
       "      <th>mean_for_weekday_and_hour</th>\n",
       "      <th>horatmin</th>\n",
       "      <th>tmax</th>\n",
       "      <th>tmin</th>\n",
       "      <th>rain</th>\n",
       "      <th>wind</th>\n",
       "      <th>temp</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>2018-09-01</td>\n",
       "      <td>Sat</td>\n",
       "      <td>1</td>\n",
       "      <td>456</td>\n",
       "      <td>NaN</td>\n",
       "      <td>6</td>\n",
       "      <td>33,6</td>\n",
       "      <td>21,0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.1</td>\n",
       "      <td>21,0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>2018-09-01</td>\n",
       "      <td>Sat</td>\n",
       "      <td>2</td>\n",
       "      <td>342</td>\n",
       "      <td>NaN</td>\n",
       "      <td>6</td>\n",
       "      <td>33,6</td>\n",
       "      <td>21,0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.1</td>\n",
       "      <td>21,0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>2018-09-01</td>\n",
       "      <td>Sat</td>\n",
       "      <td>3</td>\n",
       "      <td>275</td>\n",
       "      <td>NaN</td>\n",
       "      <td>6</td>\n",
       "      <td>33,6</td>\n",
       "      <td>21,0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.1</td>\n",
       "      <td>21,0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>2018-09-01</td>\n",
       "      <td>Sat</td>\n",
       "      <td>4</td>\n",
       "      <td>183</td>\n",
       "      <td>NaN</td>\n",
       "      <td>6</td>\n",
       "      <td>33,6</td>\n",
       "      <td>21,0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.1</td>\n",
       "      <td>21,0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>2018-09-01</td>\n",
       "      <td>Sat</td>\n",
       "      <td>5</td>\n",
       "      <td>137</td>\n",
       "      <td>NaN</td>\n",
       "      <td>6</td>\n",
       "      <td>33,6</td>\n",
       "      <td>21,0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.1</td>\n",
       "      <td>21,0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>2018-09-01</td>\n",
       "      <td>Sat</td>\n",
       "      <td>6</td>\n",
       "      <td>116</td>\n",
       "      <td>NaN</td>\n",
       "      <td>6</td>\n",
       "      <td>33,6</td>\n",
       "      <td>21,0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.1</td>\n",
       "      <td>21,0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6</th>\n",
       "      <td>2018-09-01</td>\n",
       "      <td>Sat</td>\n",
       "      <td>7</td>\n",
       "      <td>89</td>\n",
       "      <td>NaN</td>\n",
       "      <td>6</td>\n",
       "      <td>33,6</td>\n",
       "      <td>21,0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.1</td>\n",
       "      <td>27.299999237060547</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7</th>\n",
       "      <td>2018-09-01</td>\n",
       "      <td>Sat</td>\n",
       "      <td>8</td>\n",
       "      <td>130</td>\n",
       "      <td>NaN</td>\n",
       "      <td>6</td>\n",
       "      <td>33,6</td>\n",
       "      <td>21,0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.1</td>\n",
       "      <td>27.299999237060547</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8</th>\n",
       "      <td>2018-09-01</td>\n",
       "      <td>Sat</td>\n",
       "      <td>9</td>\n",
       "      <td>213</td>\n",
       "      <td>NaN</td>\n",
       "      <td>6</td>\n",
       "      <td>33,6</td>\n",
       "      <td>21,0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.1</td>\n",
       "      <td>27.299999237060547</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>9</th>\n",
       "      <td>2018-09-01</td>\n",
       "      <td>Sat</td>\n",
       "      <td>10</td>\n",
       "      <td>255</td>\n",
       "      <td>NaN</td>\n",
       "      <td>6</td>\n",
       "      <td>33,6</td>\n",
       "      <td>21,0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.1</td>\n",
       "      <td>27.299999237060547</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>10</th>\n",
       "      <td>2018-09-01</td>\n",
       "      <td>Sat</td>\n",
       "      <td>11</td>\n",
       "      <td>362</td>\n",
       "      <td>NaN</td>\n",
       "      <td>6</td>\n",
       "      <td>33,6</td>\n",
       "      <td>21,0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.1</td>\n",
       "      <td>27.299999237060547</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>11</th>\n",
       "      <td>2018-09-01</td>\n",
       "      <td>Sat</td>\n",
       "      <td>12</td>\n",
       "      <td>451</td>\n",
       "      <td>NaN</td>\n",
       "      <td>6</td>\n",
       "      <td>33,6</td>\n",
       "      <td>21,0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.1</td>\n",
       "      <td>33,6</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>12</th>\n",
       "      <td>2018-09-01</td>\n",
       "      <td>Sat</td>\n",
       "      <td>13</td>\n",
       "      <td>450</td>\n",
       "      <td>NaN</td>\n",
       "      <td>6</td>\n",
       "      <td>33,6</td>\n",
       "      <td>21,0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.1</td>\n",
       "      <td>33,6</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>13</th>\n",
       "      <td>2018-09-01</td>\n",
       "      <td>Sat</td>\n",
       "      <td>14</td>\n",
       "      <td>424</td>\n",
       "      <td>NaN</td>\n",
       "      <td>6</td>\n",
       "      <td>33,6</td>\n",
       "      <td>21,0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.1</td>\n",
       "      <td>33,6</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>14</th>\n",
       "      <td>2018-09-01</td>\n",
       "      <td>Sat</td>\n",
       "      <td>15</td>\n",
       "      <td>339</td>\n",
       "      <td>NaN</td>\n",
       "      <td>6</td>\n",
       "      <td>33,6</td>\n",
       "      <td>21,0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.1</td>\n",
       "      <td>27.299999237060547</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>15</th>\n",
       "      <td>2018-09-01</td>\n",
       "      <td>Sat</td>\n",
       "      <td>16</td>\n",
       "      <td>427</td>\n",
       "      <td>NaN</td>\n",
       "      <td>6</td>\n",
       "      <td>33,6</td>\n",
       "      <td>21,0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.1</td>\n",
       "      <td>27.299999237060547</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>16</th>\n",
       "      <td>2018-09-01</td>\n",
       "      <td>Sat</td>\n",
       "      <td>17</td>\n",
       "      <td>456</td>\n",
       "      <td>NaN</td>\n",
       "      <td>6</td>\n",
       "      <td>33,6</td>\n",
       "      <td>21,0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.1</td>\n",
       "      <td>27.299999237060547</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>17</th>\n",
       "      <td>2018-09-01</td>\n",
       "      <td>Sat</td>\n",
       "      <td>18</td>\n",
       "      <td>437</td>\n",
       "      <td>NaN</td>\n",
       "      <td>6</td>\n",
       "      <td>33,6</td>\n",
       "      <td>21,0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.1</td>\n",
       "      <td>27.299999237060547</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>18</th>\n",
       "      <td>2018-09-01</td>\n",
       "      <td>Sat</td>\n",
       "      <td>19</td>\n",
       "      <td>617</td>\n",
       "      <td>NaN</td>\n",
       "      <td>6</td>\n",
       "      <td>33,6</td>\n",
       "      <td>21,0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.1</td>\n",
       "      <td>27.299999237060547</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>19</th>\n",
       "      <td>2018-09-01</td>\n",
       "      <td>Sat</td>\n",
       "      <td>20</td>\n",
       "      <td>648</td>\n",
       "      <td>NaN</td>\n",
       "      <td>6</td>\n",
       "      <td>33,6</td>\n",
       "      <td>21,0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.1</td>\n",
       "      <td>27.299999237060547</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>20</th>\n",
       "      <td>2018-09-01</td>\n",
       "      <td>Sat</td>\n",
       "      <td>21</td>\n",
       "      <td>559</td>\n",
       "      <td>NaN</td>\n",
       "      <td>6</td>\n",
       "      <td>33,6</td>\n",
       "      <td>21,0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.1</td>\n",
       "      <td>27.299999237060547</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>21</th>\n",
       "      <td>2018-09-01</td>\n",
       "      <td>Sat</td>\n",
       "      <td>22</td>\n",
       "      <td>459</td>\n",
       "      <td>NaN</td>\n",
       "      <td>6</td>\n",
       "      <td>33,6</td>\n",
       "      <td>21,0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.1</td>\n",
       "      <td>27.299999237060547</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>22</th>\n",
       "      <td>2018-09-01</td>\n",
       "      <td>Sat</td>\n",
       "      <td>23</td>\n",
       "      <td>407</td>\n",
       "      <td>NaN</td>\n",
       "      <td>6</td>\n",
       "      <td>33,6</td>\n",
       "      <td>21,0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.1</td>\n",
       "      <td>21,0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>23</th>\n",
       "      <td>2018-09-02</td>\n",
       "      <td>Sun</td>\n",
       "      <td>0</td>\n",
       "      <td>437</td>\n",
       "      <td>NaN</td>\n",
       "      <td>22</td>\n",
       "      <td>34,8</td>\n",
       "      <td>20,2</td>\n",
       "      <td>1.2</td>\n",
       "      <td>1.7</td>\n",
       "      <td>20,2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>24</th>\n",
       "      <td>2018-09-02</td>\n",
       "      <td>Sun</td>\n",
       "      <td>1</td>\n",
       "      <td>428</td>\n",
       "      <td>NaN</td>\n",
       "      <td>22</td>\n",
       "      <td>34,8</td>\n",
       "      <td>20,2</td>\n",
       "      <td>1.2</td>\n",
       "      <td>1.7</td>\n",
       "      <td>20,2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>25</th>\n",
       "      <td>2018-09-02</td>\n",
       "      <td>Sun</td>\n",
       "      <td>2</td>\n",
       "      <td>334</td>\n",
       "      <td>NaN</td>\n",
       "      <td>22</td>\n",
       "      <td>34,8</td>\n",
       "      <td>20,2</td>\n",
       "      <td>1.2</td>\n",
       "      <td>1.7</td>\n",
       "      <td>20,2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>26</th>\n",
       "      <td>2018-09-02</td>\n",
       "      <td>Sun</td>\n",
       "      <td>3</td>\n",
       "      <td>219</td>\n",
       "      <td>NaN</td>\n",
       "      <td>22</td>\n",
       "      <td>34,8</td>\n",
       "      <td>20,2</td>\n",
       "      <td>1.2</td>\n",
       "      <td>1.7</td>\n",
       "      <td>20,2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>27</th>\n",
       "      <td>2018-09-02</td>\n",
       "      <td>Sun</td>\n",
       "      <td>4</td>\n",
       "      <td>167</td>\n",
       "      <td>NaN</td>\n",
       "      <td>22</td>\n",
       "      <td>34,8</td>\n",
       "      <td>20,2</td>\n",
       "      <td>1.2</td>\n",
       "      <td>1.7</td>\n",
       "      <td>20,2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>28</th>\n",
       "      <td>2018-09-02</td>\n",
       "      <td>Sun</td>\n",
       "      <td>5</td>\n",
       "      <td>153</td>\n",
       "      <td>NaN</td>\n",
       "      <td>22</td>\n",
       "      <td>34,8</td>\n",
       "      <td>20,2</td>\n",
       "      <td>1.2</td>\n",
       "      <td>1.7</td>\n",
       "      <td>20,2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>29</th>\n",
       "      <td>2018-09-02</td>\n",
       "      <td>Sun</td>\n",
       "      <td>6</td>\n",
       "      <td>134</td>\n",
       "      <td>NaN</td>\n",
       "      <td>22</td>\n",
       "      <td>34,8</td>\n",
       "      <td>20,2</td>\n",
       "      <td>1.2</td>\n",
       "      <td>1.7</td>\n",
       "      <td>20,2</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "          date day_of_week  hour  rides  mean_for_weekday_and_hour  horatmin  \\\n",
       "0   2018-09-01         Sat     1    456                        NaN         6   \n",
       "1   2018-09-01         Sat     2    342                        NaN         6   \n",
       "2   2018-09-01         Sat     3    275                        NaN         6   \n",
       "3   2018-09-01         Sat     4    183                        NaN         6   \n",
       "4   2018-09-01         Sat     5    137                        NaN         6   \n",
       "5   2018-09-01         Sat     6    116                        NaN         6   \n",
       "6   2018-09-01         Sat     7     89                        NaN         6   \n",
       "7   2018-09-01         Sat     8    130                        NaN         6   \n",
       "8   2018-09-01         Sat     9    213                        NaN         6   \n",
       "9   2018-09-01         Sat    10    255                        NaN         6   \n",
       "10  2018-09-01         Sat    11    362                        NaN         6   \n",
       "11  2018-09-01         Sat    12    451                        NaN         6   \n",
       "12  2018-09-01         Sat    13    450                        NaN         6   \n",
       "13  2018-09-01         Sat    14    424                        NaN         6   \n",
       "14  2018-09-01         Sat    15    339                        NaN         6   \n",
       "15  2018-09-01         Sat    16    427                        NaN         6   \n",
       "16  2018-09-01         Sat    17    456                        NaN         6   \n",
       "17  2018-09-01         Sat    18    437                        NaN         6   \n",
       "18  2018-09-01         Sat    19    617                        NaN         6   \n",
       "19  2018-09-01         Sat    20    648                        NaN         6   \n",
       "20  2018-09-01         Sat    21    559                        NaN         6   \n",
       "21  2018-09-01         Sat    22    459                        NaN         6   \n",
       "22  2018-09-01         Sat    23    407                        NaN         6   \n",
       "23  2018-09-02         Sun     0    437                        NaN        22   \n",
       "24  2018-09-02         Sun     1    428                        NaN        22   \n",
       "25  2018-09-02         Sun     2    334                        NaN        22   \n",
       "26  2018-09-02         Sun     3    219                        NaN        22   \n",
       "27  2018-09-02         Sun     4    167                        NaN        22   \n",
       "28  2018-09-02         Sun     5    153                        NaN        22   \n",
       "29  2018-09-02         Sun     6    134                        NaN        22   \n",
       "\n",
       "    tmax  tmin  rain  wind                temp  \n",
       "0   33,6  21,0   0.0   1.1                21,0  \n",
       "1   33,6  21,0   0.0   1.1                21,0  \n",
       "2   33,6  21,0   0.0   1.1                21,0  \n",
       "3   33,6  21,0   0.0   1.1                21,0  \n",
       "4   33,6  21,0   0.0   1.1                21,0  \n",
       "5   33,6  21,0   0.0   1.1                21,0  \n",
       "6   33,6  21,0   0.0   1.1  27.299999237060547  \n",
       "7   33,6  21,0   0.0   1.1  27.299999237060547  \n",
       "8   33,6  21,0   0.0   1.1  27.299999237060547  \n",
       "9   33,6  21,0   0.0   1.1  27.299999237060547  \n",
       "10  33,6  21,0   0.0   1.1  27.299999237060547  \n",
       "11  33,6  21,0   0.0   1.1                33,6  \n",
       "12  33,6  21,0   0.0   1.1                33,6  \n",
       "13  33,6  21,0   0.0   1.1                33,6  \n",
       "14  33,6  21,0   0.0   1.1  27.299999237060547  \n",
       "15  33,6  21,0   0.0   1.1  27.299999237060547  \n",
       "16  33,6  21,0   0.0   1.1  27.299999237060547  \n",
       "17  33,6  21,0   0.0   1.1  27.299999237060547  \n",
       "18  33,6  21,0   0.0   1.1  27.299999237060547  \n",
       "19  33,6  21,0   0.0   1.1  27.299999237060547  \n",
       "20  33,6  21,0   0.0   1.1  27.299999237060547  \n",
       "21  33,6  21,0   0.0   1.1  27.299999237060547  \n",
       "22  33,6  21,0   0.0   1.1                21,0  \n",
       "23  34,8  20,2   1.2   1.7                20,2  \n",
       "24  34,8  20,2   1.2   1.7                20,2  \n",
       "25  34,8  20,2   1.2   1.7                20,2  \n",
       "26  34,8  20,2   1.2   1.7                20,2  \n",
       "27  34,8  20,2   1.2   1.7                20,2  \n",
       "28  34,8  20,2   1.2   1.7                20,2  \n",
       "29  34,8  20,2   1.2   1.7                20,2  "
      ]
     },
     "execution_count": 62,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df_hourly.head(30)"
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.8.2"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 4
}
